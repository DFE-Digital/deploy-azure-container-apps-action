name: Build, push, deploy

on:
  workflow_call:
    inputs:
      docker-image-name:
        description: 'The name of your Docker image'
        required: true
        type: string
      docker-build-file-name:
        description: 'The filename of a Dockerfile'
        default: 'Dockerfile'
        required: false
        type: string
      docker-build-context:
        description: 'The relative or absolute path to a local directory containing a Dockerfile'
        default: '.'
        required: false
        type: string
      docker-build-args:
        description: 'Specify additional arguments to pass to your Docker image during build time'
        required: false
        type: string
      environment:
        description: 'Specify the environment you are deploying to'
        default: 'development'
        required: false
        type: string
    secrets:
      azure-acr-client-id:
        required: true
      azure-acr-secret:
        required: true
      azure-acr-url:
        required: true
      azure-aca-credentials:
        required: true
      azure-aca-name:
        required: true
      azure-aca-resource-group:
        required: true

concurrency:
  group: ${{ github.ref }}-${{ inputs.environment }}
  cancel-in-progress: true

jobs:
  set-env:
    name: Set environment variables
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      branch: ${{ steps.var.outputs.branch }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - id: var
        run: |
          GIT_REF=${{ github.ref_name }}
          GIT_BRANCH=${GIT_REF//\//-}
          INPUT_ENVIRONMENT=${{ inputs.environment }}
          ENVIRONMENT=${INPUT_ENVIRONMENT:-"development"}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT

  build-and-push-image:
    name: Build and push to ACR
    needs: set-env
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Azure Container Registry login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.azure-acr-client-id }}
          password: ${{ secrets.azure-acr-secret }}
          registry: ${{ secrets.azure-acr-url }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.docker-build-context }}
          file: ${{ inputs.docker-build-file-name }}
          build-args: |
            ${{ inputs.docker-build-args }}
            COMMIT_SHA=${{ needs.set-env.outputs.checked-out-sha }}
          tags: |
            ${{ secrets.azure-acr-url }}/${{ inputs.docker-image-name }}:${{ needs.set-env.outputs.branch }}
            ${{ secrets.azure-acr-url }}/${{ inputs.docker-image-name }}:sha-${{ needs.set-env.outputs.checked-out-sha }}
            ${{ secrets.azure-acr-url }}/${{ inputs.docker-image-name }}:latest
          push: true
          cache-from: type=gha

  deploy-image:
    name: Deploy '${{ needs.set-env.outputs.branch }}' to ${{ needs.set-env.outputs.environment }}
    needs: [ build-and-push-image, set-env ]
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    steps:
      - name: Azure login with ACA credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure-aca-credentials }}

      - name: Update Azure Container Apps Revision
        uses: azure/CLI@v1
        id: azure
        with:
          azcliversion: 2.53.1
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name ${{ secrets.azure-aca-name }} \
              --resource-group ${{ secrets.azure-aca-resource-group }} \
              --image ${{ secrets.azure-acr-url }}/${{ inputs.docker-image-name }}:sha-${{ needs.set-env.outputs.checked-out-sha }} \
              --output none
