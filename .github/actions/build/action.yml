name: Build and Publish
description: "Builds a Docker Image and publishes it to GitHub Container Registry"

inputs:
  build-file-name:
    description: 'Filename of a Dockerfile'
    default: 'Dockerfile'
    required: false
  build-context:
    description: 'Relative or absolute path to a local directory containing a Dockerfile'
    default: '.'
    required: false
  build-args:
    description: 'Additional arguments to pass to your Docker image during build time'
    required: false
  build-target:
    description: 'Target layer in the Dockerfile you want to build'
    required: false
  image-name:
    description: 'Name of your Docker image'
    required: true
  tag-prefix:
    description: 'Prefix that you want to add to all of the published image tags'
    required: false
  github-token:
    description: 'The GITHUB_TOKEN'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Set environment
      shell: bash
      id: var
      run: |
        GIT_REF=${{ github.ref_name }}
        GIT_BRANCH=${GIT_REF//\//-}
        CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
        GITHUB_REPOSITORY=${{ github.repository }}
        echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
        echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT
        echo "github-repository-lc=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

    - name: Login with GitHub Token
      uses: docker/login-action@v3
      with:
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}
        registry: ghcr.io

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.build-context }}
        file: ${{ inputs.build-file-name }}
        target: ${{ inputs.build-target }}
        build-args: |
          ${{ inputs.build-args }}
          COMMIT_SHA=${{ steps.var.outputs.checked-out-sha }}
        secrets: github_token=${{ inputs.github-token }}
        tags: |
          ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}${{ steps.var.outputs.branch }}
          ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}sha-${{ steps.var.outputs.checked-out-sha }}
          ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}latest
        push: true
        cache-from: type=gha

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      id: attest
      with:
        subject-name: ghcr.io/${{ steps.var.outputs.github-repository-lc }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true
        github-token: ${{ inputs.github-token }}

    - name: Set summary
      shell: bash
      run: |
        echo "### Built 🛠️" >> $GITHUB_STEP_SUMMARY
        echo "- ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}${{ steps.var.outputs.branch }}" >> $GITHUB_STEP_SUMMARY
        echo "- ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}sha-${{ steps.var.outputs.checked-out-sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- ghcr.io/${{ steps.var.outputs.github-repository-lc }}:${{ inputs.tag-prefix }}latest" >> $GITHUB_STEP_SUMMARY
